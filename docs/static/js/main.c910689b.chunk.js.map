{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGift","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,8BACI,mCACA,sBAAMC,SAbM,SAACC,GACjBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAe,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACrCN,EAAc,MAOd,SACI,uBACIO,KAAO,OACPC,MAAOT,EACPU,SArBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,iB,+BCRlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,gDACkCC,UAAUH,GAD5C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAMF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAIpC,OACI,sBAAKc,UAAU,6DAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHX,SAACA,GAAc,IAAD,EACZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KA2BtC,OArBAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAM,SAAAC,GAECH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAK3B,CAACpB,IASIqB,EDrBwBK,CAAa1B,GAAhCa,EAHuB,EAG5BN,KAAaa,EAHe,EAGfA,QAOpB,OACI,qCACA,6BAAKpB,IAEJoB,GAAW,wCAGZ,qBAAKJ,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEQA,GADGA,EAAIC,aEvBtBgB,EAAe,WAAO,IAAD,EAEKzC,mBAAS,CAAC,SAFf,mBAEvB0C,EAFuB,KAEZ3C,EAFY,KAS9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAGQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADHA,Y,MClB/B6B,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.c910689b.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleImputChange = (e) => {\r\n        setinputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit =(e)=>{\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ){\r\n            // console.log('Submit hecho')\r\n            setCategories( cats=> [inputValue,...cats]);\r\n            setinputValue('');\r\n        }        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <>\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type = \"text\"\r\n                    value={inputValue}\r\n                    onChange={handleImputChange}\r\n                />\r\n            </form>\r\n            </>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGift = async(category) =>{\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=FrkJjiTooUScTc2l4M82HjE4TR5w7UAo`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id: img.id,\r\n            title:img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    // console.log({id, title, url});\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__delay-0.5s\">\r\n            <img src={ url } alt={ title }/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","// import React, { useState, useEffect } from 'react'\r\nimport React from 'react';\r\n//import { getGift } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    // useEffect(()=>{\r\n    //     getGift(category)\r\n    //         .then(setImages)\r\n    // }, [category])\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n\r\n        {loading && <p>Loading</p>}\r\n\r\n        {/* {loading ? 'Cargando...': 'Data cargada'} */}\r\n        <div className=\"card-grid\">            \r\n            {\r\n                images.map((img) => ( \r\n                    <GifGridItem \r\n                        key = {img.id} \r\n                        {...img}\r\n                        />\r\n                ))\r\n            }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport {getGift} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( ()=>{\r\n\r\n        getGift(category)\r\n            .then (imgs =>{\r\n                // setTimeout(() => {\r\n                    setState({\r\n                        data:imgs,\r\n                        loading: false\r\n                    });\r\n                // },3000);\r\n            });\r\n\r\n    },[category]);\r\n\r\n    // setTimeout(()=>{\r\n    //     setState({\r\n    //         data: [1,2,3,4,5,6,7],\r\n    //         loading: false\r\n    //     })\r\n    // },3000);\r\n\r\n    return state; // {data:[], loading: true}\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories,setCategories] = useState(['cats']);\r\n    \r\n    // const handleAdd = () => {\r\n    //     // setCategories(...categories,'Vanesa la condesa');   //no funca bien\r\n    //     setCategories(cats=>[...cats, 'Vanesa la condesa']);\r\n    // }\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                { \r\n                    // <li key={ category }>{ category }</li>\r\n                    categories.map(category => (\r\n                        <GifGrid\r\n                        key = {category}\r\n                        category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n  \n);"],"sourceRoot":""}